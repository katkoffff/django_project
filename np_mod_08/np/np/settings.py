"""
Django settings for np project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'j8v@kwe^optvp@fv#=w$z$uu5pm_*9%c(!#eawca8p#b2^@21x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1']

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'optional'
SOCIALACCOUNT_EMAIL_VERIFICATION = ACCOUNT_EMAIL_VERIFICATION
DEFAULT_FROM_EMAIL = 'katkofff@yandex.ru'
ACCOUNT_CONFIRM_EMAIL_ON_GET = True

ACCOUNT_FORMS = {'signup': 'sign.models.BasicSignupForm'}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
    #'news',
    'django_apscheduler',
    'django_filters',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'sign',
    'protect',
    'appointment',
    'news.apps.NewsConfig',
    'celery', #возможно хрень
]


APSCHEDULER_DATETIME_FORMAT = "Y-m-d H:M:S"
APSCHEDULER_RUN_NOW_TIMEOUT = 25


AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',

    #'django.middleware.cache.UpdateCacheMiddleware',
    #'django.middleware.common.CommonMiddleware',
    #'django.middleware.cache.FetchFromCacheMiddleware',
]

ROOT_URLCONF = 'np.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

LOGIN_URL = 'accounts/login/'
LOGIN_REDIRECT_URL = '/news/'

SITE_ID = 1

WSGI_APPLICATION = 'np.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'katkofff'
EMAIL_HOST_PASSWORD = 'mE1pqZwK'
EMAIL_USE_SSL = True

REDIS_HOST = '127.0.0.1'
REDIS_PORT = '6379'

CELERY_BROKER_URL = 'redis://' + REDIS_HOST + ':' + REDIS_PORT + '/0'
CELERY_BROKER_TRANSPORT_OPTION = {'visibility_timeout': 3600}
CELERY_RESULT_BACKEND = 'redis://' + REDIS_HOST + ':' + REDIS_PORT + '/0'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
#CELERYBEAT_SCHEDULER = "redis://localhost:6379" #возможно хрень

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR/"static"]

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'cache_files'),
    }
}

LOGGING = \
    {
        'version': 1,
        'disable_existing_loggers': False,
        'formatters': {
            'debug_format': {
                'format': '{asctime} {levelname} {message}',
                'style': '{',
            },
            'warning_format': {
                'format': '{asctime} {levelname} {message} {pathname}',
                'style': '{',
            },
            'error_format': {
                'format': '{asctime} {levelname} {message} {pathname} {exc_info}',
                'style': '{',
            },
            'general_format': {
                'format': '{asctime} {levelname} {message} {module}',
                'style': '{',
            },
        },
        'filters': {
            'require_debug_true': {
                '()': 'django.utils.log.RequireDebugTrue',
            },
            'require_debug_false': {
                '()': 'django.utils.log.RequireDebugFalse',
            },
        },
        'handlers': {
            'console_debug': {
                'level': 'DEBUG',
                'class': 'logging.StreamHandler',
                'formatter': 'debug_format',
                'filters': ['require_debug_true'],
            },
            'console_warning': {
                'level': 'WARNING',
                'class': 'logging.StreamHandler',
                'formatter': 'warning_format',
                'filters': ['require_debug_true'],
            },
            'console_error': {
                'level': 'ERROR',
                'class': 'logging.StreamHandler',
                'formatter': 'error_format',
                'filters': ['require_debug_true'],
            },
            'console_critical': {
                'level': 'ERROR',
                'class': 'logging.StreamHandler',
                'formatter': 'error_format',
                'filters': ['require_debug_true'],
            },
            'general': {
                'level': 'INFO',
                'class': 'logging.FileHandler',
                'filename': 'general.log',
                'formatter': 'general_format',
                'filters': ['require_debug_false'],
            },
            'errors': {
                'level': 'WARNING',
                'class': 'logging.FileHandler',
                'filename': 'errors.log',
                'formatter': 'general_format',
                'filters': ['require_debug_false'],
            },
            'security': {
                'class': 'logging.FileHandler',
                'filename': 'security.log',
                'formatter': 'general_format',
            },
            'mail_admins': {
                'level': 'ERROR',
                'filters': ['require_debug_false'],
                'class': 'django.utils.log.AdminEmailHandler',
                'formatter': 'general_format',
                'include_html': True,
            }
        },
        'loggers': {
            'django': {
                'handlers': ['console_debug', 'console_warning', 'console_error', 'console_critical', ],
                'propagate': True,
                'level': 'DEBUG',
            },
            'django.request': {
                'handlers': ['errors', 'mail_admins'],
                'propagate': True,
                'level': 'DEBUG',
            },
            'django.server': {
                'handlers': ['errors', 'mail_admins'],
                'propagate': True,
                'level': 'DEBUG',
            },
            'django.template': {
                'handlers': ['errors'],
                'propagate': True,
                'level': 'DEBUG',
            },
            'django.db_backends': {
                'handlers': ['errors'],
                'propagate': True,
                'level': 'DEBUG',
            },
            'django.security': {
                'handlers': ['security', ],
                'propagate': True,
                'level': 'DEBUG',
            },
        }
    }

